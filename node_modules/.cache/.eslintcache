[{"/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/index.js":"1","/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/App.jsx":"2","/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/Grid.jsx":"3","/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/Square.jsx":"4"},{"size":171,"mtime":1648681644805,"results":"5","hashOfConfig":"6"},{"size":211,"mtime":1651016866877,"results":"7","hashOfConfig":"8"},{"size":1840,"mtime":1651018322564,"results":"9","hashOfConfig":"8"},{"size":259,"mtime":1651016776119,"results":"10","hashOfConfig":"8"},{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"6qcgzx",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1g7rce8",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/index.js",[],[],["27","28"],"/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/App.jsx",["29","30"],[],"import React, { useEffect, useState } from 'react';\nimport './grid.css';\nimport Grid from \"./Grid\"\n\nfunction App() {\n    return (\n    <div className=\"App\">\n    <Grid></Grid>\n    </div>\n  )\n}\n\nexport default App;",["31","32"],"/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/Grid.jsx",["33","34","35"],[],"import React, {useState} from 'react';\nimport Square from './Square';\n\nfunction Grid() {\n    const [grid, setGrid] = useState([\n        [0,0],\n        [0,0]\n    ])\n\n    const clickHandler = (x, y) => {\n        // declare new grid\n        let newGrid = []\n        // for each row\n        for (let i = 0; i < grid.length; i++) {\n            let row = [];\n            // for each square\n            for (let j = 0; j < grid.length; j++) {\n                // if square is the one clicked on\n                if (i == x && j == y) {\n                    // if square value is 0 push 1\n                    if(grid[x][y] == 0) row.push(1)\n                    else {\n                        // if square value is 1 push 0\n                        row.push(0)\n                    }\n                    // if square is not the one clicked on, keep its prev value\n                } else {\n                    row.push(grid[i][j])\n                }\n            }\n            newGrid.push(row)\n        }\n        setGrid(newGrid)\n    }\n\n    const [count, setCount] = useState(0)\n    \n    const countHandler = (x, y) => {\n        (grid[x][y] === 0) ? setCount(count + 1) : setCount(count - 1)\n    }\n\n    const renderSquare = (x, y) => {\n        return <Square val={grid[x][y]} x={x} y={y} click={(x,y) => clickHandler(x,y)}>\n\n        </Square>\n    }\n\n    return (\n        <div>\n            <h3>\n                Count: {count}\n            </h3>\n            <div className=\"grid\">\n            <div onClick={() => {countHandler(0,0)}}>{renderSquare(0,0)}</div>\n            <div onClick={() => {countHandler(0,1)}}>{renderSquare(0,1)}</div>\n            <div onClick={() => {countHandler(1,0)}}>{renderSquare(1,0)}</div>\n            <div onClick={() => {countHandler(1,1)}}>{renderSquare(1,1)}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Grid;","/Users/christopherlee/Git/CS5610/cs5610-ma5/christopher--lee-ma5/src/Square.jsx",[],[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"44","line":1,"column":28,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},{"ruleId":"36","replacedBy":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":19,"column":23,"nodeType":"49","messageId":"50","endLine":19,"endColumn":25},{"ruleId":"47","severity":1,"message":"48","line":19,"column":33,"nodeType":"49","messageId":"50","endLine":19,"endColumn":35},{"ruleId":"47","severity":1,"message":"48","line":21,"column":35,"nodeType":"49","messageId":"50","endLine":21,"endColumn":37},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["51"],["52"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]